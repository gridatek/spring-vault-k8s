apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault
  namespace: vault-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
    spec:
      serviceAccountName: vault-app
      containers:
      - name: vault
        image: hashicorp/vault:1.15.2
        env:
        - name: VAULT_DEV_ROOT_TOKEN_ID
          value: myroot
        - name: VAULT_DEV_LISTEN_ADDRESS
          value: 0.0.0.0:8200
        - name: VAULT_ADDR
          value: https://0.0.0.0:8200
        - name: VAULT_DEV_TLS_CERT_FILE
          value: /vault/certs/vault-cert.pem
        - name: VAULT_DEV_TLS_KEY_FILE
          value: /vault/certs/vault-key.pem
        ports:
        - containerPort: 8200
        volumeMounts:
        - name: vault-certs
          mountPath: /vault/certs
          readOnly: true
        securityContext:
          capabilities:
            add:
            - IPC_LOCK
        lifecycle:
          postStart:
            exec:
              command:
              - sh
              - -c
              - |
                # Wait for Vault to be ready
                sleep 5
                until vault status; do
                  echo "Waiting for Vault to be ready..."
                  sleep 2
                done
                
                # Enable KV secrets engine (ignore if already enabled)
                vault secrets enable -path=secret kv-v2 || echo "KV engine already enabled"
                
                # Create database password secret
                vault kv put secret/vault-app database.password=supersecretpassword
                
                # Enable Kubernetes auth method
                vault auth enable kubernetes || echo "Kubernetes auth already enabled"
                
                # Configure Kubernetes auth method
                vault write auth/kubernetes/config \
                    token_reviewer_jwt="$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
                    kubernetes_host="https://$KUBERNETES_PORT_443_TCP_ADDR:443" \
                    kubernetes_ca_cert=@/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                
                # Create policy for the application
                vault policy write vault-app-policy - <<EOF
                path "secret/data/vault-app/*" {
                  capabilities = ["read"]
                }
                EOF
                
                # Create a role for the application
                vault write auth/kubernetes/role/vault-app-role \
                    bound_service_account_names=vault-app \
                    bound_service_account_namespaces=vault-app \
                    policies=vault-app-policy \
                    ttl=24h
                
                echo "Vault setup completed successfully!"
        command:
        - vault
        - server
        - -dev
        - -dev-listen-address=0.0.0.0:8200
      volumes:
      - name: vault-certs
        secret:
          secretName: vault-certs
---
apiVersion: v1
kind: Service
metadata:
  name: vault
  namespace: vault-app
spec:
  selector:
    app: vault
  ports:
  - port: 8200
    targetPort: 8200
  type: ClusterIP